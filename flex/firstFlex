%option noyywrap
%option c++
%{

	#include <iostream>
	#include <fstream>
	#include <regex>
	#include <map>

	std::map<std::string, int> map;

	void stat(const char* str){
		std::string line(str);
		line = line.substr(15, line.length()-2);
		int j, k;
		std::string portNum;

		k=line.find('|');
		portNum = line.substr(k,line.length());
		std::transform(portNum.begin(), portNum.end(), portNum.begin(), ::tolower);
		map[portNum]++;
	}

%}

%%


^([Ee][Dd]2[Kk]:\/\/\|[Ss][Ee][Rr][Vv][Ee][Rr]\|)((([01]{0,1}[0-9]{0,1}[0-9]{1}|2[0-4][0-9]|25[0-5])[.]){3}([01]{0,1}[0-9]{0,1}[0-9]{1}|2[0-4][0-9]|25[0-5])\|)([1-9]{0,4}|[1-5][0-9]{0,4}|6[0-5]{2}[0-3][0-5])\|\/$ {
	stat(yytext);
	std::cout << yytext << std::endl;
}


%%

int main(int argc, char * argv[]) {
	std::string fileName = "Input.txt";
    FlexLexer* lexer = new yyFlexLexer();

    std::ifstream f(fileName);
    lexer->yylex(&f);
    for(auto it = map.begin();it!=map.end();++it){
        std::cout<<it->first<<" - "<<it->second<<std::endl;
    }
    return 0;
}


